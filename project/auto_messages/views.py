from django.shortcuts import get_object_or_404, render
from twilio.rest import Client
from django.http import HttpResponse, HttpResponseRedirect
from django.urls import reverse
from django.conf import settings
from reservations.models import Reservation
from django.core.mail import EmailMessage, EmailMultiAlternatives
from django.template.loader import render_to_string
from django.utils.html import strip_tags
from django.utils import formats

def send_sms(to_number, message_body):
    """
    Send SMS using Twilio with proper error handling
    Returns (success, error_message)
    """
    try:
        client = Client(settings.TWILIO_SID, settings.TWILIO_TOKEN)
        message = client.messages.create(
            body=message_body,
            from_=settings.TWILIO_NUMBER,
            to=to_number
        )
        return True, None
    except Exception as e:
        return False, str(e)


# RESERVATION FAITE
def send_client_make_reserv_sms_to_parker(reservation):
    if not reservation or not reservation.place or not reservation.place.phone:
        return False, "Missing required reservation data"
    
    parker_number = str(reservation.place.phone)
    parker_confirmation_url = f"{settings.SITE_URL}/compte/hote/mes-reservations/#a-confirmer"
    
    # TO PARKER
    message = f"""Vous avez re√ßu une nouvelle demande de r√©servation !
    
Consultez les d√©tails et r√©pondez rapidement ici : {parker_confirmation_url}  üöó"""

    success, error = send_sms(parker_number, message)
    if not success:
        return False, f"√âchec d'envoi SMS au parker: {error}"
    print(f"Message envoy√© avec succ√®s √† {parker_number}")

    return True, None

def send_client_make_reserv_sms_to_client(reservation):
    if not reservation or not reservation.place or not reservation.place.phone:
        return False, "Missing required reservation data"
    
    client_number = str(reservation.phone)
    client_confirmation_url = f"{settings.SITE_URL}/compte/mes-reservations/#en-attente"
    
    # TO CLIENT
    message = f"""Votre demande de r√©servation chez {reservation.parker.first_name} {reservation.parker.last_name} a √©t√© envoy√©e. 
    
L'h√¥te dispose de 24h pour r√©pondre. Consultez les d√©tails ici : {client_confirmation_url}   üöó"""

    success, error = send_sms(client_number, message)
    if not success:
        return False, f"√âchec d'envoi SMS au client: {error}"
    print(f"Message envoy√© avec succ√®s √† {client_number}")

    return True, None

def send_client_make_reserv_email(reservation):
    try:
        from_email = "ParkSafe <noreply@park-safe.fr>"
        parker_confirmation_url = f"{settings.SITE_URL}/compte/hote/mes-reservations/#a-confirmer"
        client_confirmation_url = f"{settings.SITE_URL}/compte/mes-reservations/#en-attente"

        # TO PARKER
        to_email = reservation.parker.email
        subject = "üì≠ Nouvelle demande de r√©servation re√ßue !"
        content = f"""Bonjour {reservation.parker.first_name},
Vous avez re√ßu une nouvelle demande de r√©servation pour votre espace de stationnement !

Connectez-vous √† votre tableau de bord pour consulter les d√©tails et r√©pondre √† la demande : {parker_confirmation_url}

Merci de r√©agir rapidement pour maximiser vos chances de confirmation.

L'√©quipe ParkSafe üöó‚ú®
"""

        email = EmailMessage(
            subject=subject,
            body=content,
            from_email=from_email,
            to=[to_email]
        )
        email.send()
        arrivee_formatted = formats.date_format(reservation.arrivee, format="l j F Y √† H:h")  
        departure_formatted = formats.date_format(reservation.departure, format="l j F Y √† H:h")
        # TO CLIENT
        to_email = reservation.client.email
        subject = "üì≠ Nouvelle demande de r√©servation envoy√©e !"
        content = f"""Bonjour {reservation.client.first_name},

Votre demande de r√©servation a √©t√© envoy√©e avec succ√®s ! Voici les d√©tails :
    ‚Ä¢ H√¥te : {reservation.parker.first_name} {reservation.parker.last_name}
    ‚Ä¢ Adresse du stationnement : {reservation.place.address}
    ‚Ä¢ Dates de r√©servation : {arrivee_formatted} - {departure_formatted}
    ‚Ä¢ Prix total : {reservation.total_price}‚Ç¨

üëâ Et maintenant ?
L'h√¥te dispose de 24 heures pour accepter ou refuser votre demande. Vous recevrez une notification
d√®s qu'il aura r√©pondu.

En attendant, vous pouvez effectuez une autre demande parmi nos h√¥tes pour maximiser vos
chances de retour positif.

Merci de faire confiance √† ParkSafe pour votre stationnement ! üöó‚úàÔ∏è

√Ä bient√¥t,
L'√©quipe ParkSafe
"""

        email = EmailMessage(
            subject=subject,
            body=content,
            from_email=from_email,
            to=[to_email]
        )
        email.send()

    except Exception as e:
        print(e)
        return False, str(e)



# RESERVATION ACCEPTEE
def send_parker_accept_reserv_sms_to_client(reservation):
    if not reservation or not reservation.place or not reservation.place.phone:
        return False, "Missing required reservation data"
    
    client_number = str(reservation.phone)
    client_confirmation_url = f"{settings.SITE_URL}/compte/mes-reservations/#attente-de-paiement"
    
    # TO CLIENT
    message = f"""Votre demande de r√©servation a √©t√© accept√©e ! 
    
Proc√©dez au paiement sous 48h pour la finaliser {client_confirmation_url} üöó"""

    success, error = send_sms(client_number, message)
    if not success:
        return False, f"√âchec d'envoi SMS au client: {error}"
    print(f"Message envoy√© avec succ√®s √† {client_number}")

    return True, None


def send_parker_accept_reserv_email(reservation):
    try:
        from_email = "ParkSafe <noreply@park-safe.fr>"
        client_confirmation_url = f"{settings.SITE_URL}/compte/mes-reservations/#attente-de-paiement"
        arrivee_formatted = formats.date_format(reservation.arrivee, format="l j F Y √† H:h")  
        departure_formatted = formats.date_format(reservation.departure, format="l j F Y √† H:h")
        # TO CLIENT
        to_email = reservation.client.email
        subject = "‚úÖ Votre demande de r√©servation a √©t√© accept√©e : Passez au paiement ! "
        content = f"""Bonjour {reservation.client.first_name},

Bonne nouvelle, votre demande de r√©servation a √©t√© accept√©e par {reservation.parker.first_name} {reservation.parker.last_name}

Voici les d√©tails :
    ‚Ä¢ H√¥te : {reservation.parker.first_name} {reservation.parker.last_name}
    ‚Ä¢ Dates de r√©servation : {arrivee_formatted} - {departure_formatted}
    ‚Ä¢ Prix total : {reservation.total_price}‚Ç¨
    ‚Ä¢ Nombre de passagers : {reservation.passengers}

üëâ Prochaine √©tape : Proc√©dez au paiement sous 48 heures pour finaliser la r√©servation.

Sans paiement, votre r√©servation sera annul√©e automatiquement.

Lien : {client_confirmation_url}

Merci d'avoir choisi ParkSafe, et bon voyage ! üöó‚úàÔ∏è

L'√©quipe ParkSafe
"""

        email = EmailMessage(
            subject=subject,
            body=content,
            from_email=from_email,
            to=[to_email]
        )
        email.send()

    except Exception as e:
        return False, str(e)



# RESERVATION PAYEE
def send_client_payed_reserv_sms_to_parker(reservation):
    if not reservation or not reservation.place or not reservation.place.phone:
        return False, "Missing required reservation data"
    
    parker_number = str(reservation.place.phone)
    client_number = str(reservation.phone)
    parker_confirmation_url = f"{settings.SITE_URL}/compte/hote/mes-reservations/#mes-reservations"
    
    # TO PARKER
    message = f"""Bonne nouvelle ! 
    
{reservation.client.first_name} {reservation.client.last_name} a finalis√© le paiement pour sa r√©servation. 

Vous pouvez le joindre directement au {client_number}. 

Consultez les d√©tails de la r√©servation ici : {parker_confirmation_url} 

üöó"""

    success, error = send_sms(parker_number, message)
    if not success:
        return False, f"√âchec d'envoi SMS au parker: {error}"
    print(f"Message envoy√© avec succ√®s √† {parker_number}")

    return True, None

def send_client_payed_reserv_sms_to_client(reservation):
    if not reservation or not reservation.place or not reservation.place.phone:
        return False, "Missing required reservation data"
    
    client_number = str(reservation.phone)
    parker_number = str(reservation.place.phone)
    client_confirmation_url = f"{settings.SITE_URL}/compte/mes-reservations/#en-cours"
    
    # TO CLIENT
    message = f"""Votre paiement a √©t√© re√ßu ! Votre r√©servation est confirm√©e et finalis√©e.
    
Coordonn√©es de l'h√¥te :
    ‚Ä¢ Nom de l'h√¥te : {reservation.parker.first_name} {reservation.parker.last_name}
    ‚Ä¢ Adresse du stationnement : {reservation.place.address}
    ‚Ä¢ T√©l√©phone de l'h√¥te : {parker_number}

Consultez les d√©tails ici : {client_confirmation_url}

Bon voyage ! üöó‚úàÔ∏è
"""

    success, error = send_sms(client_number, message)
    if not success:
        return False, f"√âchec d'envoi SMS au client: {error}"
    print(f"Message envoy√© avec succ√®s √† {client_number}")

    return True, None


def send_client_payed_reserv_email(reservation):
    try:
        from_email = "ParkSafe <noreply@park-safe.fr>"
        parker_confirmation_url = f"{settings.SITE_URL}/compte/hote/mes-reservations/#mes-reservations"
        client_confirmation_url = f"{settings.SITE_URL}/compte/mes-reservations/#en-cours"
        client_number = str(reservation.phone)
        parker_number = str(reservation.place.phone)
        arrivee_formatted = formats.date_format(reservation.arrivee, format="l j F Y √† H:h")  
        departure_formatted = formats.date_format(reservation.departure, format="l j F Y √† H:h")
        # TO PARKER
        to_email = reservation.parker.email
        subject = f"üí∞ {reservation.client.first_name} {reservation.client.last_name} √† finalis√© sa r√©servation !"
        content = f"""Bonjour {reservation.parker.first_name},
Bonne nouvelle ! {reservation.client.first_name} {reservation.client.last_name} a finalis√© le paiement pour sa r√©servation.

D√©tails de la r√©servation :
    ‚Ä¢ Voyageur : {reservation.client.first_name} {reservation.client.last_name}
    ‚Ä¢ Dates de r√©servation : {arrivee_formatted} - {departure_formatted}
    ‚Ä¢ Adresse de stationnement : {reservation.place.address}

Vous pouvez maintenant contacter le voyageur directement par t√©l√©phone au {client_number}.

üëâ Consultez les d√©tails complets de la r√©servation ici : {parker_confirmation_url}

L'√©quipe ParkSafe üöó‚ú®
"""

        email = EmailMessage(
            subject=subject,
            body=content,
            from_email=from_email,
            to=[to_email]
        )
        email.send()
        arrivee_formatted = formats.date_format(reservation.arrivee, format="l j F Y √† H:h")  
        departure_formatted = formats.date_format(reservation.departure, format="l j F Y √† H:h")
        # TO CLIENT
        to_email = reservation.client.email
        subject = "üéâ R√©servation confirm√©e : Votre stationnement est pr√™t !"
        content = f"""Bonjour {reservation.client.first_name},

F√©licitations, votre paiement a √©t√© re√ßu et votre r√©servation est maintenant confirm√©e ! 
Voici les d√©tails :
    ‚Ä¢ H√¥te : {reservation.parker.first_name} {reservation.parker.last_name}
    ‚Ä¢ Adresse du stationnement : {reservation.place.address}
    ‚Ä¢ T√©l√©phone de l'h√¥te : {parker_number}
    ‚Ä¢ Dates de r√©servation : {arrivee_formatted} - {departure_formatted}
    ‚Ä¢ Prix total : {reservation.total_price}‚Ç¨

üëâ Prochaine √©tape :
Votre h√¥te vous communiquera prochainement les instructions pour acc√©der au stationnement. Si
vous avez des questions, n'h√©sitez pas √† le contacter directement.

Consultez les d√©tails de votre r√©servation ici : {client_confirmation_url}

Merci d'avoir choisi ParkSafe, et bon voyage !  üöó‚úàÔ∏è

√Ä bient√¥t,
L'√©quipe ParkSafe
"""

        email = EmailMessage(
            subject=subject,
            body=content,
            from_email=from_email,
            to=[to_email]
        )
        email.send()

    except Exception as e:
        return False, str(e)


# COMPTE CREE
def send_account_created_mail(user):
    try:
        from_email = "ParkSafe <noreply@park-safe.fr>"
        connect_url = f"{settings.SITE_URL}/compte/se-connecter/"

        to_email = user.email
        subject = f"üéâ Bienvenue sur ParkSafe ! Votre compte est pr√™t"
        content = f"""Bonjour {user.first_name},

F√©licitations, votre compte ParkSafe a √©t√© cr√©√© avec succ√®s ! Vous pouvez d√©sormais :
    ‚Ä¢ Rechercher et r√©server des stationnements priv√©s pr√®s des a√©roports.
    ‚Ä¢ Proposer votre espace de stationnement √† la location.

üëâ Connectez-vous d√®s maintenant : {connect_url}

Nous sommes ravis de vous compter parmi nous et restons √† votre disposition pour toute question.

Merci de faire partie de la communaut√© ParkSafe, et √† bient√¥t !

L'√©quipe ParkSafe üöó‚ú®

"""

        email = EmailMessage(
            subject=subject,
            body=content,
            from_email=from_email,
            to=[to_email]
        )
        email.send()

    except Exception as e:
            return False, str(e)



# ANNONCE CREE
def send_place_created_sms(place):
    parker_number = str(place.phone)
    
    # TO PARKER
    message = f"""Votre annonce ParkSafe a √©t√© cr√©√©e avec succ√®s ! üéâ
    
Elle sera v√©rifi√©e par notre √©quipe sous 24h avant d'√™tre mise en ligne. 

Vous serez inform√© d√®s qu'elle sera active. üöó‚ú®
"""

    success, error = send_sms(parker_number, message)
    if not success:
        return False, f"√âchec d'envoi SMS au parker: {error}"
    print(f"Message envoy√© avec succ√®s √† {parker_number}")

    return True, None

def send_place_created_mail(place):
    try:
        from_email = "ParkSafe <noreply@park-safe.fr>"

        to_email = place.user.email
        subject = f"üìã Votre annonce est en cours de v√©rification"
        content = f"""Bonjour {place.user.first_name},

Merci d'avoir cr√©√© une annonce sur ParkSafe ! üéâ

Votre annonce est actuellement en cours de v√©rification par notre √©quipe. Ce processus peut prendre
jusqu'√† 24 heures. Une fois valid√©e, votre espace de stationnement sera mis en ligne et visible par
les voyageurs.

üëâ Vous serez inform√© par e-mail d√®s que votre annonce sera publi√©e.

Merci de votre confiance,
L'√©quipe ParkSafe üöó‚ú®
"""

        email = EmailMessage(
            subject=subject,
            body=content,
            from_email=from_email,
            to=[to_email]
        )
        email.send()

    except Exception as e:
            return False, str(e)



# ANNONCE VERIFIE
def send_place_checked_sms(place):
    parker_number = str(place.phone)
    confirmation_url = f"{settings.SITE_URL}/places/detail-de-la-place/{place.token}/"
    
    # TO PARKER
    message = f"""Votre annonce ParkSafe a √©t√© valid√©e et est d√©sormais en ligne ! üéâ
    
Les voyageurs peuvent maintenant la r√©server.

Consultez-la ici : {confirmation_url}

üöó‚ú®
"""

    success, error = send_sms(parker_number, message)
    if not success:
        return False, f"√âchec d'envoi SMS au parker: {error}"
    print(f"Message envoy√© avec succ√®s √† {parker_number}")

    return True, None


def send_place_checked_mail(place):
    confirmation_url = f"{settings.SITE_URL}/places/detail-de-la-place/{place.token}/"
    try:
        from_email = "ParkSafe <noreply@park-safe.fr>"

        to_email = place.user.email
        subject = f"üéâ Votre annonce est maintenant en ligne !"
        content = f"""Bonjour {place.user.first_name},

Bonne nouvelle ! Votre annonce a √©t√© v√©rifi√©e et est d√©sormais en ligne. Les voyageurs peuvent
maintenant la consulter et effectuer des r√©servations.

üëâ Consultez votre annonce ici : {confirmation_url}


Suivi des notifications

Pour vous accompagner, vous recevrez des SMS et e-mails tout au long du processus de r√©servation :
    ‚Ä¢ Lorsque vous recevez une demande de r√©servation.
    ‚Ä¢ Lorsque le voyageur finalise la r√©servation en proc√©dant au paiement. 

    
Important

Il est crucial de traiter les demandes de r√©servation le plus rapidement possible afin d'√©viter que le
voyageur ne finalise sa r√©servation ailleurs. Une r√©ponse rapide am√©liore votre visibilit√© et votre
taux de r√©servation.

Merci de faire partie de la communaut√© ParkSafe ! üöó‚ú®

L'√©quipe ParkSafe
"""

        email = EmailMessage(
            subject=subject,
            body=content,
            from_email=from_email,
            to=[to_email]
        )
        email.send()

    except Exception as e:
            return False, str(e)